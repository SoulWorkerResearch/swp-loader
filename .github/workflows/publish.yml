name: MSBuild
on:
  push:
    branches:
    - main

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  
  TAG_NAME: 1.0.0.${{ github.job }}-alpha

jobs:
  publish:
    runs-on: windows-2022
    strategy:
      matrix:
        build_target: ["Debug", "Release"]
    
    env:
      VERSION: ${{ env.TAG_NAME }}-${{ matrix.build_target }}
      FILE_NAME: ${{ env.TAG_NAME }}-${{ matrix.build_target }}.zip

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Install vcpkg
      run: "vcpkg integrate install"

    - name: Build
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} ${{ env.SOLUTION_FILE_PATH }}
      
    - name: Pack output
      run: Compress-Archive -Path ${{ env.SOLUTION_FILE_PATH }}\output\*.dll -DestinationPath ${{ env.FILE_NAME }}.zip

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.FILE_NAME }}
        tag_name: ${{ env.VERSION }}
