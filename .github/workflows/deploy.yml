name: Deploy

on:
  push:
    # branches:
    #   - main

jobs:
  meta:
    runs-on: ubuntu-latest
            
    outputs:
      latestTag: ${{ steps.tags.outputs.latest }}
      latestSdk: ${{ steps.sdk.outputs.latest }}

    steps:          
    - name: Checkout
      uses: actions/checkout@main
      with:
        submodules: true

    - name: Get Latest Tag
      id: tags
      shell: pwsh
      run: | 
        $tag = gh release list -L 1 | Select-String -Pattern "Latest\t([\d]+\.[\d]+\.[\d]+)\t" -AllMatches
        if ($tag.Matches.Groups.Length -eq 0) {
          echo "latest=0.0.0" >> $GITHUB_OUTPUT
          return;
        }
        
        echo "latest=$($tag.Matches.Groups[1].Value)" >> $GITHUB_OUTPUT

    - name: Get Current SDK Version
      id: sdk
      shell: pwsh
      run: | 
        $values = Get-Content -Path ".\swp-sdk\swp-sdk\headers\swpsdk\sdk_version.hpp" | Select-String -Pattern "sdk_version{\W+([\d]+)\,\W+([\d]+)\,\W+([\d]+)\,\W+([\d]+)\W+}" -AllMatches
        if ($values.Matches.Groups.Length -eq 0) {
          echo "latest=0.0.0" >> $GITHUB_OUTPUT
          return;
        }

        echo latest="$($values.Matches.Groups[1].Value).$($values.Matches.Groups[2].Value).$($values.Matches.Groups[3].Value)" >> $GITHUB_OUTPUT

  publish:
    runs-on: windows-latest
    needs: meta
    if: (needs.meta.outputs.latestTag != needs.meta.outputs.latestSdk) || (needs.meta.outputs.latestSdk == '0.0.0')
    strategy:
      fail-fast: true
      matrix: 
        include:
          - BUILD_CONFIGURATION: Debug
            PATHS: bin/*.dll, bin/*.pdb

          - BUILD_CONFIGURATION: Release
            PATHS: bin/*.dll

    name: ${{ matrix.BUILD_CONFIGURATION }}
    steps:          
    - name: Checkout
      uses: actions/checkout@main
      with:
        submodules: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@main

    - name: Integrate vcpkg
      run: vcpkg integrate install
      
    - name: Build solution
      run: msbuild /m /p:Configuration=${{ matrix.BUILD_CONFIGURATION }} /property:Platform=x86

    - name: Pack to archive
      run: Compress-Archive -Path ${{ matrix.PATHS }} -DestinationPath swp-loader-v${{ needs.meta.outputs.latestSdk }}-${{ matrix.BUILD_CONFIGURATION }}.zip

    - name: Publish build
      uses: softprops/action-gh-release@master
      with:
        name: SoulWorker Plugin Loader v${{ needs.meta.outputs.latestSdk }}
        files: swp-loader-v${{ needs.meta.outputs.latestSdk }}-${{ matrix.BUILD_CONFIGURATION }}.zip
        generate_release_notes: true